由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的

第1步：创建SSH Key
    在用户主目录下，看看有没有.ssh目录
        如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。
        如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：
	ssh-keygen -t rsa -C "zhangchaochn@outlook.com"
第2步：登陆GitHub
    打开“Account settings”，“SSH Keys”页面：
    然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容：
    点“Add Key”，你就应该看到已经添加的Key：

********************************************************************************
为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。
*******************************************************************************
add a remote reposltory
    首先，登陆GitHub，
    然后，在右上角找到“Create a new repo”按钮，创建一个新的仓库：
    在Repository name填入learngit，其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库：
    我们根据GitHub的提示，在本地的learngit仓库下运行命令：
	git remote add origin github@github.com:0ffff/learngit.git
    
    下一步，就可以把本地库的所有内容推送到远程库上：
	git push -u origin master
        
由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。

    从现在起，只要本地作了提交，就可以通过命令：
	git push origin master
*******************************************************************************

clone from cloud

    首先，登陆GitHub，创建一个新的仓库，名字叫gitskills：
    下一步是用命令git clone克隆一个本地库：
	git clone git@github.com:0ffff/gitskills.git

